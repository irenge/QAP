library("permute")
#create distance matrix 
d1 <- matrix(c(0,24,26,24,17,25,15,24,0,2,5,13,23,18,26,2,0,6,14,24,19,24,5,6,0,10,28,22,17,13,14,10,0,30,21,25,23,24,28,30,0,9,15,18,19,22,21,9,0),7,7)

#create flow matrix
f1 <- matrix(c(0,0,54,88,88,0,53,0,0,51,68,75,80,0,54,51,0,0,86,74,0,88,68,0,0,72,0,0,88,75,86,72,0,87,72,0,80,74,0,87,0,55,53,0,0,0,72,55,0),7,7)

#calculate the size of the problem
n <- dim(d1)[1]
o<- n-1

# calculate possible number of permutation
fac <- factorial(n)
nfac <- fac - 1

pm<- allPerms(n)

sol <- vector(mode="numeric", length=nfac)


start.time <- Sys.time()

for(w in 1:nfac){
  sol[w]<-0
  for(i in 1:n) {
    z<-i+1
    for( j in 1:n){
      sol[w] <-sol[w] + d1[i,j]*f1[pm[w,i],pm[w,j]]
    }
 
  }

}

end.time <- Sys.time()

time.taken <-  end.time - start.time 
time.taken

min(sol)


sort(sol)[1]

sort(sol)[2]

sort(sol)[3]

optIndex <- which(sol==min(sol))

bestf1 <- f1[pm[optIndex,],pm[optIndex,]]

#bestf1

#plot(sol)
